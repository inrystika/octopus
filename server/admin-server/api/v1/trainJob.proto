syntax = "proto3";

package adminserver.api.v1;

option go_package = "server/admin-server/api/v1;v1";



import "google/api/annotations.proto";
import "validate/validate.proto";

service TrainJobService {
    //停止训练任务
    rpc StopJob (StopJobRequest) returns (StopJobReply) {
      option (google.api.http) = {
        post: "/v1/trainmanage/trainjob/{id}/stop"
        body: "*"
      };
    };

    // 获取训练任务详情
    rpc GetJobInfo(TrainJobInfoRequest) returns (TrainJobInfoReply){
       option (google.api.http) = {
          get: "/v1/trainmanage/trainjob/{id}"
       };
    };
    // 获取训练任务列表
    rpc TrainJobList(TrainJobListRequest) returns (TrainJobListReply){
       option (google.api.http) = {
         get: "/v1/trainmanage/trainjob"
       };
    };

    // 获取训练任务事件列表
    rpc GetJobEventList (JobEventListRequest) returns (JobEventListReply) {
      option (google.api.http) = {
         get: "/v1/trainmanage/trainjobevent"
      };
    };

}

message Config {
  //子任务名称，非必填，校验规则"^[0-9a-zA-Z_]*$"，最大长度15个字符
  string name = 1[(validate.rules).string = {min_len: 0, max_len: 40}];
  //子任务执行命令
  string command = 2[(validate.rules).string = {min_len: 1}];
  //command执行命令参数,key-value
  repeated Parameter parameters = 3;
  //资源规格ID，必填
  int64 resourceSpecId = 4;
  //子任务个数，非必填
  int64 taskNumber = 5[(validate.rules).int64 = {gte:1}];
  //子任务最小失败数，非必填
  int64  minFailedTaskCount = 6[(validate.rules).int64 = {gte:1}];
  //子任务最小成功数，非必填
  int64  minSucceededTaskCount = 7[(validate.rules).int64 = {gte:1}];
  //是否主任务，非必填
  bool isMainRole = 8;
  //资源规格名称
  string resourceSpecName = 9;
  //资源规格价格
  uint32 resourceSpecPrice = 10;
  //子任务副本状态
  repeated ReplicaState replicaStates = 11;
  //子任务状态
  string  subTaskState = 12;
}

message ReplicaState {
    string  key = 1;
    string  state = 2;
}

message Parameter {
  //命令参数key，非必填
  string key = 1;
  //命令参数value，非必填
  string value = 2;
}

message  StopJobRequest {
  //任务ID
  string id = 1[(validate.rules).string = {min_len: 1}];
}

message StopJobReply {
  //停止时间
  int64 stoppedAt = 1;
}

message TrainJob {
  //任务ID
  string  id = 1;
  //用户ID
  string userId = 2;
  //用户空间ID
  string workspaceId = 3;
  //job名称
  string name = 4;
  //job描述
  string desc = 5;
  //算法ID
  string algorithmId = 6;
  //算法版本
  string algorithmVersion = 7;
  //镜像ID
  string imageId = 8;
  //数据集ID
  string dataSetId = 9;
  //数据集版本
  string dataSetVersion = 10;
  //是否分布式任务
  bool isDistributed = 11;
  //子任务配置信息
  repeated Config config = 12;
  //创建时间
  int64 createdAt = 13;
  //更新时间
  int64 updatedAt = 14;
  //任务状态
  string status   = 15;
  //job完成时间
  int64  completedAt = 16;
  //算法名称
  string algorithmName = 17;
  //镜像名称
  string imageName = 18;
  //数据集名称
  string dataSetName = 19;
  //运行时
  int64 runSec = 20;
  //用户名
  string userName = 21;
  //工作空间名
  string workspaceName = 22;
  //镜像版本
  string imageVersion = 23;
  //启动时间
  int64  startedAt = 24;
  //用户邮箱
  string userEmail = 25;
}

message TrainJobListRequest {
  // 页码，从1开始，非必填
  int64 pageIndex = 1[(validate.rules).int64 = {gte:1}];
  // 页大小，最小1条，最大100条，非必填
  int64 pageSize = 2[(validate.rules).int64 = {gte:1,lte:100}];
  // 分组依据，非必填
  string sortBy = 3;
  //升序、降序，非必填
  string orderBy = 4[(validate.rules).string = {in: ["", "asc", "desc"]}];
  //大于某个时间创建，非必填
  int64 createdAtGte = 5;
  //小于某个时间创建，非必填
  int64 createdAtLt = 6;
  //状态查询，非必填
  string status = 7;
  //模糊查找字段，可用于name等模糊查找，非必填
  string searchKey = 8;
  //用户ID，非必填
  string userId = 9;
  //工作空间ID，非必填
  string workspaceId = 10;
  //用户名，非必填
  string userNameLike = 11;
}

message TrainJobListReply {
  //查询结果总数
  int64  totalSize = 1;
  //训练任务
  repeated TrainJob trainJobs = 2;
}

message TrainJobInfoRequest {
  //jobID
  string id = 1[(validate.rules).string = {min_len: 1}];
}

message TrainJobInfoReply {
  //训练任务
  TrainJob trainJob = 1;
}

message JobEventListRequest {
  // 页码，从1开始
  int64 pageIndex = 1[(validate.rules).int64 = {gte:1}];
  // 页大小，最小1条，最大100条
  int64 pageSize = 2[(validate.rules).int64 = {gte:1,lte:100}];
  //任务ID
  string id = 3[(validate.rules).string = {min_len: 1}];
  //子任务序号，从0开始
  int64 taskIndex = 4[(validate.rules).int64 = {gte:0,lt:100}];
  //副本序号，从0开始
  int64 replicaIndex = 5[(validate.rules).int64 = {gte:0,lt:100}];
}

message JobEventListReply {
  //查询结果总数
  int64  totalSize = 1;
  //任务事件
  repeated JobEvent jobEvents = 2;
}

message JobEvent{
  //发生时间
  string timestamp = 1;
  //副本名称
  string name = 2;
  //原因
  string reason = 3;
  //消息
  string message = 4;
}