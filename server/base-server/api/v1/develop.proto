syntax = "proto3";

package baseserver.api.v1;

option go_package = "server/base-server/api/v1;v1";



import "validate/validate.proto";
import "server/common/api/v1/develop.proto";
import "server/common/api/v1/common.proto";

service Develop {
  // 创建notebook
  rpc CreateNotebook (CreateNotebookRequest) returns (CreateNotebookReply);
  // 启动notebook
  rpc StartNotebook (StartNotebookRequest) returns (StartNotebookReply);
  // 停止notebook
  rpc StopNotebook (StopNotebookRequest) returns (StopNotebookReply);
  // 删除notebook
  rpc DeleteNotebook (DeleteNotebookRequest) returns (DeleteNotebookReply);
  // 查询notebook列表
  rpc ListNotebook (ListNotebookRequest) returns (ListNotebookReply);
  // 查询notebook详情
  rpc GetNotebook (GetNotebookRequest) returns (GetNotebookReply);
  //获取任务事件列表
  rpc GetNotebookEventList (NotebookEventListRequest) returns (NotebookEventListReply);
  // 保存notebook
  rpc SaveNotebook (SaveNotebookRequest) returns (SaveNotebookReply);
  // 查询事件记录列表
  rpc ListNotebookEventRecord (ListNotebookEventRecordRequest) returns (ListNotebookEventRecordReply);
  // 获取调试任务监控数据
  rpc GetNotebookMetric (GetNotebookMetricRequest) returns (GetNotebookMetricReply);
}

message Endpoint {
  string endpoint = 1;
  uint32 port = 2;
}

message TaskConfig {
  repeated Endpoint endpoints = 1;
}


message CreateNotebookRequest {
  string userId = 1[(validate.rules).string = {min_len: 1}];
  string workspaceId = 2[(validate.rules).string = {min_len: 1}];
  string name = 3[(validate.rules).string = {min_len: 1}];
  string desc = 4;
  string imageId = 5;
  string algorithmId = 6;
  string algorithmVersion = 7;
  string resourceSpecId = 8[(validate.rules).string = {min_len: 1}];
  string datasetId = 9;
  string datasetVersion = 10;
  int32 taskNumber = 11[(validate.rules).int32 = {gte:1}];
  string resourcePool = 12;
  repeated common.api.v1.Mount mounts = 13;
  //镜像地址，非必填，镜像地址和镜像ID填一个
  string imageUrl = 14;
  map<string, string> envs = 15;
  string command = 16;
  bool disableMountUserHome = 17;
  int64 autoStopDuration = 18;
  repeated TaskConfig taskConfigs = 19;
  string preTrainModelId = 20;
  string preTrainModelVersion = 21;
}

message CreateNotebookReply {
  string id = 1;
}

message StartNotebookRequest {
  string id = 1[(validate.rules).string = {min_len: 1}];
  int64 autoStopDuration = 2;
}

message StartNotebookReply {
  string id = 1;
}

message StopNotebookRequest {
  string id = 1[(validate.rules).string = {min_len: 1}];
  string operation = 2;
}

message StopNotebookReply {
  string id = 1;
}

message DeleteNotebookRequest {
  string id = 1[(validate.rules).string = {min_len: 1}];
}

message DeleteNotebookReply {
  string id = 1;
}

message ListNotebookRequest {
  int64 pageIndex = 1[(validate.rules).int64 = {gte:1}];
  // 页大小，最小1条，最大100条
  int64 pageSize = 2[(validate.rules).int64 = {gte:1,lte:100}];
  string sortBy = 3;
  string orderBy = 4[(validate.rules).string = {in: ["", "asc", "desc"]}];
  int64 createdAtGte = 5;
  int64 createdAtLt = 6;
  string status = 7;
  string searchKey = 8; //name等模糊查找
  string userId = 9;
  string workspaceId = 10;
}

message Notebook {
  message Task {
    string url = 1;
    string name = 2;
  }
  int64 createdAt = 1;
  int64 updatedAt = 2;
  string id = 3;
  string userId = 4;
  string workspaceId = 5;
  string name = 6;
  string desc = 7;
  string imageId = 8;
  string algorithmId = 9;
  string algorithmVersion = 10;
  string resourceSpecId = 11;
  string status = 12;
  string imageName = 14;
  string algorithmName = 15;
  string resourceSpecName = 16;
  string datasetId = 17;
  string datasetVersion = 18;
  string datasetName = 19;
  double resourceSpecPrice = 20;
  string notebookJobId = 21;
  string imageVersion = 22;
  repeated Task tasks = 23;
  string resourcePool=24;
  string imageUrl = 25;
  string exitMsg = 26;
  string command = 27;
  int64 autoStopDuration = 28;
  string operation = 29;
  int64 startedAt = 30;
  int64 stoppedAt = 31;
  string preTrainModelId = 32;
  string preTrainModelVersion = 33;
  string preTrainModelName = 34;
}

message ListNotebookReply {
  int64 totalSize = 1;
  repeated Notebook notebooks = 2;
}

message GetNotebookRequest {
  string id = 1[(validate.rules).string = {min_len: 1}];
}

message GetNotebookReply {
  Notebook notebook = 1;
}

message NotebookEventListRequest {
  // 页码，从1开始
  int64 pageIndex = 1[(validate.rules).int64 = {gte:1}];
  // 页大小，最小1条，最大100条
  int64 pageSize = 2[(validate.rules).int64 = {gte:1,lte:100}];
  //任务ID
  string id = 3[(validate.rules).string = {min_len: 0}];
  //子任务序号，从0开始
  int64 taskIndex = 4[(validate.rules).int64 = {gte:0,lte:100}];
  //副本序号，从0开始
  int64 replicaIndex = 5[(validate.rules).int64 = {gte:0,lte:100}];
  //Notebook ID
  string NotebookId = 6[(validate.rules).string = {min_len: 0}];
}

message NotebookEventListReply {
  //查询结果总数
  int64  totalSize = 1;
  //任务事件
  repeated NotebookEvent notebookEvents = 2;
}

message NotebookEvent{
  //发生时间
  string timestamp = 1;
  //副本名称
  string name = 2;
  //原因
  string reason = 3;
  //消息
  string message = 4;
}

message SaveNotebookRequest {
  string notebookId = 1[(validate.rules).string = {min_len: 1}];
  string taskName = 2[(validate.rules).string = {min_len: 1}];
  string imageName = 3[(validate.rules).string = {pattern: "^[a-zA-Z][\\w|-]*$", max_len:50}];
  string imageVersion = 4[(validate.rules).string = {pattern: "^[a-zA-Z][\\w|\\-|\\.]*$", max_len: 50}];
  string layerDescription = 5;
}

message SaveNotebookReply {
  string imageId = 1;
}

message NotebookEventRecord {
  int64 time = 1;
  string notebookId = 2;
  common.api.v1.NotebookEventRecordType type = 3;
  string remark = 4;
}

message ListNotebookEventRecordRequest {
  int64 pageIndex = 1[(validate.rules).int64 = {gte:1}];
  // 页大小，最小1条，最大100条
  int64 pageSize = 2[(validate.rules).int64 = {gte:1,lte:100}];
  string notebookId = 3[(validate.rules).string = {min_len: 1}];
}

message ListNotebookEventRecordReply {
  int64  totalSize = 1;
  repeated NotebookEventRecord records = 2;
}

message GetNotebookMetricRequest {
  string id = 1[(validate.rules).string = {min_len: 1}];
  int32 taskIndex = 2;
  int64 start = 3;
  int32 size = 4[(validate.rules).int32 = {gte:0,lte:1000}];
  int32 step = 5;
}

//值为-1表示该时间点没有数据
message GetNotebookMetricReply {
  repeated double cpuUsage = 1;
  repeated double memUsage = 2;
  repeated double memUsagePercent = 5;
  repeated double accCardUtil = 6;
  repeated double accCardMemUsage = 7;
  repeated double networkReceiveBytes = 8;
  repeated double networkTransmitBytes = 9;
  repeated double fsUsageBytes = 10;
  string company = 11;
}