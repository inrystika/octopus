apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ template "taskset-core.fullname" . }}
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "taskset-core.fullname" . }}
subjects:
- kind: ServiceAccount
  name: {{ template "taskset-core.fullname" . }}
  # TO BE UPDATED IF NEEDED
  namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "taskset-core.fullname" . }}
  labels:
{{ include "taskset-core.labels" . | indent 4 }}
data:
  core-config.yml: |
    adminToken: {{ .Values.taskset.adminToken }}
    pipeline:
      workerAmount: 10
    mysql:
      maxIdleConns: 10
      maxOpenConns: 5
      dbType: mysql
      authStr: "root:{{ .Values.mysql.auth.rootPassword }}@({{ include "mysql.serviceAddr" . }})/core?charset=utf8mb4&parseTime=True&loc=Local"
      debugSql: false
    evict:
      waitMinutes: 120
    lifehook:
      requestTimeOutSec: 30
      maxParallelProcessRequest: 5
      maxRetryOnFail: 3
    server:
      port: 8080
      debugMode: true
    kubernetes:
      apiServer: ""
      kubeFilePath: ""
---

apiVersion: v1
kind: Service
metadata:
  name: {{ template "taskset-core.fullname" . }}
  labels:
{{ include "taskset-core.labels" . | indent 4 }}
spec:
  ports:
  - name: http
    protocol: TCP
    port: {{ template "taskset-core.port" . }}
    targetPort: {{ template "taskset-core.port" . }}
  selector:
{{ include "taskset-core.select-labels" . | indent 8 }}

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ template "taskset-core.fullname" . }}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "taskset-core.fullname" . }}
spec:
  selector:
    matchLabels:
{{ include "taskset-core.select-labels" . | indent 8 }}
  replicas: {{ .Values.taskset.replicas }}
  template:
    metadata:
      labels:
{{ include "taskset-core.labels" . | indent 8 }}
    spec:
      serviceAccountName: {{ template "taskset-core.fullname" . }}
      volumes:
      - name: core-config
        configMap:
          name: {{ template "taskset-core.fullname" . }}
      - name: localtime
        hostPath: 
          path: /etc/localtime
      containers:
      - name: {{ .Chart.Name }}
        image: '{{ default .Values.global.image.repository.address .Values.taskset.image.address }}{{ default .Values.global.image.repository.pathname .Values.taskset.image.pathname }}/{{ .Values.taskset.image.name }}:{{ default .Chart.AppVersion .Values.taskset.image.tag }}'
        imagePullPolicy: {{ default .Values.global.image.pullPolicy .Values.taskset.image.pullPolicy }}
        args: [ "--config", "/etc/taskset/core/core-config.yml" ]
        env:
        - name: GIN_MODE
          value: "release"
        securityContext:
          privileged: true
        volumeMounts:
          - name: core-config
            mountPath: /etc/taskset/core/
          - name: localtime
            mountPath: /etc/localtime
        ports:
        - name: {{ template "taskset-core.name" . }}
          containerPort: {{ template "taskset-core.port" . }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
{{- with .Values.global.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}